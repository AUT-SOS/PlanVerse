version: '3.8'

networks:
  pv_net:
    driver: bridge
    name: pv_net

services:
  back-end:
    build: ./khoshk
    container_name: back-end
    depends_on:
     db:
       condition: service_healthy
     redis:
       condition: service_healthy
     prometheus:
       condition: service_started
    env_file:
      - ./.env
    environment:
      PROMETHEUS_URL: http://prometheus:9090
    ports:
      - "8080:8080"
    networks:
      - pv_net

  db:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: strong-password
      POSTGRES_USER: root
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg-volume:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - pv_net

  redis:
    image: redis:6-alpine
    container_name: redis
    restart: always
    environment:
      -REDIS_DATABASES: ${REDIS_DB}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./khoshk/redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - pv_net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - pv_net

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - '3000:3000'
    networks:
      - pv_net


volumes:
  pg-volume:
  prometheus_data:
